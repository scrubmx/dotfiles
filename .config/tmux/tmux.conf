# Manual Page
# https://man7.org/linux/man-pages/man1/tmux.1.html
#
# Tutorial
# https://www.youtube.com/watch?v=U-omALWIBos
#
# Todo
# - [ ] Checkout tmuxai: https://tmuxai.dev
# - [ ] Checkout awesome-tmux: https://github.com/rothgar/awesome-tmux
# - [ ] Checkout https://www.youtube.com/watch?v=wpODsyBHxH0
# - [ ] Checkout https://github.com/SylvanFranklin/.config/blob/main/tmux/tmux.conf

# This should make True Color (24-bit) and italics work in your tmux session and vim/neovim
# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6?permalink_comment_id=5077194#gistcomment-5077194
set -g default-terminal "tmux-256color"
set -sg terminal-overrides ",*:RGB"           # Add true color support

set -g mouse on                               # Captures mouse events and allow them to be bound as key bindings
set -g bell-action none                       # Turn all bells off
set -g focus-events on                        # Request focus events and pass them to apps running in tmux
set -sg escape-time 0                         # Time in milliseconds to wait after escape is pressed to check if it's part of a function or key sequence
set -g display-time 2000                      # Messages are displayed for 2 seconds instead if 750ms
set -g history-limit 10000                    # Increase history limit
# set -g bell-status-position none

# Reload tmux.conf with Prefix + r
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Tmux environment reloaded!"

unbind C-b
set -g prefix C-a
bind C-a send-prefix


# ---------------------------------------------------------------------
# Pane and Window Configurations
# ---------------------------------------------------------------------

# Split pane horizontally with Prefix + .
unbind '"'
bind . split-window -h -c "#{pane_current_path}"

# Split pane vertically with Prefix + -
unbind %
bind - split-window -v -c "#{pane_current_path}"

# Make new window consistent with current pane path
bind c new-window -c "#{pane_current_path}"

# Open a new pane with the current path
# bind o split-window -c "#{pane_current_path}"

# Resize panes with Prefix + h,j,k,l
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r l resize-pane -R 2
bind -r h resize-pane -L 2

# Move to last active window with Prefix + Tab
bind Tab last-window

# Toggle maximize / minimize pane
bind -r m resize-pane -Z

# Visual activity indicators
# TODO: Enable this if you want to see visual activity indicators in the status bar
set -g monitor-activity on
set -g visual-activity off

# Increase the pane number display time (in milliseconds)
set -g display-panes-time 1500
set -g display-panes-colour "#{@overlay0}"
set -g display-panes-active-colour "#{@pink}"

# Alternatively you can make it display the pane IDs until you select a pane
# https://unix.stackexchange.com/questions/307696/how-to-increase-tmux-pane-numbers-display-time-ctrl-b-q#answer-307698
# set -T prefix q display-panes -d 0

# Start indexing pane and windows from one instead of zero
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
setw -g automatic-rename on


# ---------------------------------------------------------------------
# Copy Configurations
# ---------------------------------------------------------------------

# Use vim motions; Use (v) to start selecting, and (y) for copy
setw -g mode-keys vi

# https://superuser.com/questions/196060/selecting-text-in-tmux-copy-mode#answer-1204738
# bind -T copy-mode-vi C-v send -X begin-selection
# bind -T copy-mode-vi C-V send -X rectangle-toggle

# Enter copy mode with Prefix + [
# https://superuser.com/questions/196060/selecting-text-in-tmux-copy-mode#answer-197272

# Copy or "yank" text selection with (y)
# bind -T copy-mode-vi y send -X copy-selection

# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# NOTE Testing pbcopy to see if it works
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"

# Don't exit copy mode after dragging with mouse
# unbind -T copy-mode-vi MouseDragEnd1Pane


# ---------------------------------------------------------------------
# Color Palette (Catppuccin Mocha)
# ---------------------------------------------------------------------

# https://catppuccin.com/palette/#flavor-mocha
set -g @rosewater "#f5e0dc"
set -g @flamingo  "#f2cdcd"
set -g @pink      "#f5c2e7"
set -g @mauve     "#cba6f7"
set -g @red       "#f38ba8"
set -g @maroon    "#eba0ac"
set -g @peach     "#fab387"
set -g @yellow    "#f9e2af"
set -g @green     "#a6e3a1"
set -g @teal      "#94e2d5"
set -g @sky       "#89dceb"
set -g @sapphire  "#74c7ec"
set -g @blue      "#89b4fa"
set -g @lavender  "#b4befe"
set -g @text      "#cdd6f4"
set -g @subtext1  "#bac2de"
set -g @subtext0  "#a6adc8"
set -g @overlay2  "#9399b2"
set -g @overlay1  "#7f849c"
set -g @overlay0  "#6c7086"
set -g @surface2  "#585b70"
set -g @surface1  "#45475a"
set -g @surface0  "#313244"
set -g @base      "#1e1e2e"
set -g @mantle    "#181825"
set -g @crust     "#11111b"


# ---------------------------------------------------------------------
# UI Customization
# ---------------------------------------------------------------------

# https://catppuccin.com/palette#flavor-mocha
# https://www.youtube.com/watch?v=_hnuEdrM-a0&t=120s

# Available Boolean Flags
# For each state, tmux provides a corresponding boolean flag you can query with #{?flag,if_true,if_false}. Common ones include:
#
# ?window_flags          — 1 if the window has any flag
# ?window_active_flag    — 1 if the window is active
# ?window_last_flag      — 1 if the window is the last window
# ?window_bell_flag      — 1 if the window has a bell
# ?window_activity_flag  — 1 if the window has activity
# ?window_silence_flag   — 1 if the window has silence
# ?window_marked_flag    — 1 if the window is marked
# ?window_zoomed_flag    — 1 if the window is zoomed
#
# TODO: Copy this guy calendar script: https://github.com/omerxx/dotfiles/blob/master/tmux/tmux.conf
# - https://www.youtube.com/watch?v=U-omALWIBos
# - https://github.com/omerxx/catppuccin-tmux/blob/main/status/meetings.sh
# - https://hasseg.org/icalBuddy
#
# status_os_icon="#([ $(uname) = 'Darwin' ] && echo '' || echo '')"

set -g @window_status_activity_icon "󰻃"
set -g @window_status_bell_icon "󰵛"
set -g @window_status_current_default_icon ""
set -g @window_status_current_zoomed_icon "󰍌"
set -g @window_status_last_icon ""
set -g @window_status_zoomed_icon "󰐘"

set -g status-position top              # Move status bar to the top
set -g status-left-length 200           # Increase length from 10 to a larger value
set -g status-right-length 200          # Increase length from 10 to a larger value
# set -g status-interval 5              # The interval to refresh the status bar (seconds)
set -g status-style "bg=default"        # Use the default-terminal background (transparent)

set -g status-justify centre          # Value centre is deprecated or unsupported in some tmux versions
# set -g status-justify center            # Move statue bar to the center

# Status left formatting and contents
# TODO: Add the current user name back, and make it dynamic (update on ssh for example)
set -g status-left "#[fg=#{@blue},bold,bg=#{@base}] #(if [[ '#{pane_current_command}' == 'ssh'* ]]; then echo '󰕈 '; else echo ' '; fi)#S #[fg=#{@base},bg=default]        "

# Status right formatting and contents
set -g status-right "#[fg=#{@mantle},bg=default]#[fg=#{@lavender},bg=#{@mantle}] #(date +'%a %d %b') "
set -ga status-right "#[fg=#{@base},bold,bg=#{@mantle}]#[fg=#{@lavender},bold,bg=#{@base}] #(date +'%I:%M %p') "

# Window status formatting and contents
set -g window-status-current-style "fg=#{@pink},bg=default"
set -g window-status-current-format "#{?window_zoomed_flag,#{@window_status_current_zoomed_icon},#{@window_status_current_default_icon}} #I:#W"

# Window activity formatting and content
set -g window-status-style "fg=#{@overlay0},bg=default"

# Icons for window status format

# The format is a nested if-else chain to show only one icon at a time.
# Logic: activity -> bell -> zoom -> last
set -g window-status-format "\
#{?window_activity_flag,#{@window_status_activity_icon},\
#{?window_bell_flag,#{@window_status_bell_icon},\
#{?window_zoomed_flag,#{@window_status_zoomed_icon},\
#{?window_last_flag,#{@window_status_last_icon},""}\
}\
}\
} #I:#W"

# Window status formatting
set -g message-command-style "fg=#{@yellow},bg=default"
set -g message-style "fg=#{@yellow},bg=#{@mantle}"
set -g mode-style "fg=#{@mantle},bg=#{@yellow}"
set -g pane-active-border-style "fg=#{@blue},bg=default"
set -g pane-border-style "fg=#{@surface2},bg=default"
set -g window-status-activity-style "fg=#{@text},bg=default"
set -g window-status-bell-style "fg=#{@text},bg=default"
set -g window-status-last-style "fg=#{@text},bg=default"
set -g window-status-message-style "fg=#{@text},bg=default"


# ---------------------------------------------------------------------
# Tmux Plugin Manager (TPM). Installs and loads Tmux plugins
# https://github.com/tmux-plugins/tpm
# ---------------------------------------------------------------------

# Plugins List:
# https://github.com/tmux-plugins/list
#
# Make sure your TPM is installed:
# git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
#
# Keybindings:
# - Prefix + I to install plugins
# - Prefix + U to update plugin, to update everything type "all"

# TMP manages itself.
set -g @plugin "tmux-plugins/tpm"

# List of tmux plugins:
set -g @plugin "christoomey/vim-tmux-navigator"    # Navigate panes and vim/nvim with Ctrl+hjkl
set -g @plugin "tmux-plugins/tmux-resurrect"       # Persist tmux sessions after computer restart
set -g @plugin "tmux-plugins/tmux-continuum"       # Automatically saves sessions for you every 15 minutes

# Other examples:
# set -g @plugin "github_username/plugin_name"
# set -g @plugin "github_username/plugin_name#branch"
# set -g @plugin "git@github.com:user/plugin"
# set -g @plugin "git@bitbucket.com:user/plugin"


# ---------------------------------------------------------------------
# Plugin configurations
# ---------------------------------------------------------------------

set -g @resurrect-dir "~/.config/tmux/resurrect"
set -g @resurrect-save-layout "on"                 # Sometimes sessions aren't restored correctly if the layout isn't captured
set -g @resurrect-capture-pane-contents "on"       # Allow tmux-resurrect to capture pane contents
set -g @continuum-restore "on"                     # Enable tmux-continuum functionality

# Initialize tmux plugin manager
# (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"
